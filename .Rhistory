f <- id %>% max       #numero de fases.
m <- p*f              #numero de combinacoes paciente x fase.
n <- alias %>% length #numero total de jogadas (linhas).
fator <- f*(alias-1)+id
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
saveRDS(amostra, "./clean_data/glm-amparo.rds")
amostra <- readRDS("./clean_data/glm-amparo.rds")
beta <- amostra %>% extract("beta")
gamma <- amostra %>% extract("gamma")
beta.m <- beta$beta %>% colMeans
gamma.m <- gamma$gamma %>% colMeans
beta.m %>% hist
gamma.m %>% hist
fatores <- 1:m
ids <- fatores %% f
aliass <- (fatores-1) %/% f +1
labelss <-  rep(labels.player, each=f) %>% as.factor
labells
labelss
fatores <- 1:m
ids <- fatores %% f
aliass <- (fatores-1) %/% f +1
ord.player <- data$playeralias %>% unique %>% match(labels$CÓDIGO)
labels.player <- labels$HY_[ord.player] %>% as.numeric %% 4
labelss <-  rep(labels.player, each=f) %>% as.factor
labelss
labels$HY_
data$playeralias
data$playeralias %>% unique
data$playeralias %>% unique %>% match(data$playeralias)
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx]
player_states <- data$HY_[player_idx]
players
player_states
players %>% as.numeric
players <- data$playeralias[player_idx] %>% as.numeric
players <- data$playeralias[player_idx] %>% as.numeric
players
alias
alias %>% unique
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx] %>% as.numeric
player_states <- data$HY_[player_idx]
players %>% sort
?sort
players %>% sort.int
players
players %>% match(players %>% sort)
players %>% sort %>% match(players)
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx] %>% as.numeric
players_sort <- players %>% sort %>% match(players)
player_states <- data$HY_[player_idx]
player_states <- player_states[rep(1,53)]
player_states
player_states <- player_states[rep(2,53)]
player_states <- data$HY_[player_idx]
player_states <- player_states[rep(2,53)]
player_States
player_states
player_states <- data$HY_[player_idx]
player_states
player_states <- player_states[player_sort]
players_sort <- players %>% sort %>% match(players)
player_states <- player_states[players_sort]
player_states
player_states_1 <- data$HY_[player_idx]
player_states_1
player_states
players_states <- data$HY_[player_idx]
players_states <- player_states[players_sort]
players_states
colors <-  rep(players_states, each=f) %>% as.factor
colors <-  rep(players_states, each=f) %>% as.factor
param <- cbind(beta.m,gamma.m,colors) %>% as.data.frame
param %>% ggplot(aes(x=beta.m, y=gamma.m,colour=colors))+
geom_point()+
geom_smooth(method='lm')
colors
colors
param %>% ggplot(aes(y=gamma.m,colour=colors))+
geom_histogram()
param %>% ggplot(aes(y=gamma.m,colour=colors))+
geom_bar()
param %>% ggplot(aes(gamma.m))+
geom_bar()
param %>% ggplot(aes(gamma.m))+
geom_histogram()
param %>% ggplot(aes(gamma.m, fill=colors))+
geom_histogram()
param$colors
player_states
players_states
param %>% ggplot(aes(gamma.m, fill=colors))+
geom_histogram()
param %>% ggplot(aes(gamma.m, colour=colors))+
geom_histogram()
param %>% ggplot(aes(gamma.m, colour=colors))+
geom_histogram()
param$colors
param %>% ggplot(aes(x=gamma.m, fill=colors))+
geom_histogram()
param %>% ggplot(aes(x=gamma.m, fill=colors))+
geom_histogram()
param$colors
param$gamma.m
param$gamma.m %>% length
param$colors %>% length
hy_ <- players_states %>% rep(each=f) %>% as.factor
param <- cbind(beta.m,gamma.m,hy_) %>% as.data.frame
param %>% ggplot(aes(x=gamma.m, fill=hy_))+
geom_histogram()
param$hy_
param$hy_ %>% class
hy_ <- players_states %>% rep(each=f) %>% as.factor
hy_
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_)
param %>% ggplot(aes(x=gamma.m, fill=hy_))+
geom_histogram()
hy_
param %>% ggplot(aes(x=gamma.m, fill=hy_))+
geom_histogram(alpha=.5, position="identity")
param %>% ggplot(aes(x=gamma.m, fill=hy_))+
geom_histogram(position="dodge")
param %>% ggplot(aes(x=gamma.m, fill=hy_))+
geom_histogram(position="dodge")
param %>% ggplot(aes(x=gamma.m, colour=hy_))+
geom_density()
param %>% ggplot(aes(x=beta.m, colour=hy_))+
geom_density()
players_escol <- data$escolaridade[player_idx]
players_escol <- players_escol[players_sort]
escol <- players_escol %>% rep(each=f) %>% as.factor
escol
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol)
param %>% ggplot(aes(x=gamma.m, colour=escol))+
geom_density()
param %>% ggplot(aes(x=beta.m, colour=escol))+
geom_density()
ids
id
id %>% table
id %>% unique
id %>% unique %>% sort
id[1]
data$playid[1]
data$playid %>% unique
data$playid %>% unique %>% sort
bloco <- data$playid %>% unique %>% sort %>% rep(p)
bloco
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco)
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco) %>%
mutate(iter1=paste(hy_,bloco),
iter2=paste(escol,bloco))
param %>% ggplot(aes(x=iter1, y=gamma.m, fill=iter1))+
geom_boxplot()
hy_
param %>% ggplot(aes(x=iter2, y=gamma.m, fill=iter1))+
geom_boxplot()
param$iter2
param$iter2 %>% unique
param$iter2 %>% unique %>% length
param$iter2 %>% unique %>% length
param %>% ggplot(aes(x=iter2, y=gamma.m, fill=iter2))+
geom_boxplot()
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco) %>%
mutate(iter1=paste(bloco,hy_),
iter2=paste(bloco,escol))
param %>% ggplot(aes(x=iter1, y=gamma.m, fill=iter1))+
geom_boxplot()
param %>% ggplot(aes(x=iter2, y=gamma.m, fill=iter2))+
geom_boxplot()
param %>% ggplot(aes(x=iter1, y=beta.m, fill=iter1))+
geom_boxplot()
param %>% ggplot(aes(x=iter2, y=beta.m, fill=iter2))+
geom_boxplot()
alfa <- amostra %>% extract("alfa")
alfa.m <- alfa$alfa %>% colMeans
param %>% ggplot(aes(x=iter1, y=gamma.m, fill=iter1))+
geom_boxplot()
param %>% ggplot(aes(x=iter2, y=gamma.m, fill=iter2))+
geom_boxplot()
labels
labels[1:8,]
aux <- data %>%
group_by(id_alias_fct) %>%
do(plots=ggplot(data=.,aes(x=move,y=cum_mean))+
geom_point()+
ggtitle(unique(.$playeralias)))
pdf("./plots/amparo-cum_mean.pdf")
aux$plots
#Análise descritiva de taxa de acerto.
aux <- data %>%
group_by(id_alias_fct) %>%
do(plots=ggplot(data=.,aes(x=move,y=cum_mean))+
geom_point()+
ggtitle(unique(.$playeralias)))
pdf("./plots/amparo-cum_mean.pdf")
aux$plots
dev.off()
#Análise descritiva de taxa de tempo até decisão.
aux <- data %>%
filter(move != 1) %>%
group_by(id_alias_fct) %>%
do(plots=ggplot(data=.,aes(x=move,y=movementtime,
colour=acertou_lgl))+
geom_point()+
ggtitle(unique(.$playeralias)))
pdf("./plots/amparo-movementtime.pdf")
aux$plots
dev.off()
data$movementTime.s.
data <- read.csv("../amparo.csv")
data <- read.csv("../amparo.csv")
data %<>% filter(game=="JG") %>%
mutate(playeralias=player.Alias, playid=playID) %>%
mutate(id_alias_fct=paste(playid,playeralias,sep="")) %>%
arrange(id_alias_fct, move) %>%
mutate(acertou_lgl=(correct %>% as.numeric),
movementtime=movementTime.s.) %>%
group_by(id_alias_fct) %>%
mutate(cum_mean = cumsum(acertou_lgl)/(1:n()))
labels <- read.csv("../labels.csv")
labels2 <- data.frame(playeralias=labels$CÓDIGO,
HY_=labels$HY_,
idade=labels$Idade,
escolaridade=labels$Escolaridade)
labels2 %<>% mutate(escolaridade=2*grepl("Superior", labels$Escolaridade)+
1*grepl("Médio", labels$Escolaridade),
HY_=HY_ %>% as.numeric %% 4)
data <- inner_join(data,labels2)
write.csv(data, "../data.csv")
data <- read.csv("../data.csv")
labels <- read.csv("../labels.csv")
aux <- data %>%
filter(move != 1) %>%
group_by(id_alias_fct) %>%
do(plots=ggplot(data=.,aes(x=move,y=movementtime,
colour=acertou_lgl))+
geom_point()+
ggtitle(unique(.$playeralias)))
pdf("./plots/amparo-movementtime.pdf")
aux$plots
dev.off()
desenha_ellipse <- function(df, ...){
ok_stages <- coefs %>% group_by(playid) %>%
summarise(n=n()) %>%
filter(n>5) %>%
select(playid) %>%
unlist
df %>% filter(playid %in% ok_stages) %>%
group_by(...) %>%
by_slice(function(df){ ellipse(x =cov(df)/nrow(df),
centre=colMeans(df),
level = 0.95,
npoints = 100) %>%
as.data.frame()},
.collate = 'rows')
}
coefs <- data %>% group_by(id_alias_fct) %>%
do(tidy(glm(acertou_lgl~move,
data=.,
family=binomial(link="logit")))) %>%
group_by(id_alias_fct) %>%
select(term, estimate)
coefs <- split(coefs, coefs$term)
coefs$"(Intercept)" %<>% select(id_alias_fct, estimate)
colnames(coefs$"(Intercept)") <- c("id_alias_fct", "alfa")
coefs$"move" <- coefs$"move"
coefs$"move" %<>% select(id_alias_fct, estimate)
colnames(coefs$"move") <- c("id_alias_fct", "beta")
coefs <- merge(coefs$"(Intercept)", coefs$"move", by="id_alias_fct")
coefs <- merge(data %>% select(id_alias_fct,playid) %>% unique,
by="id_alias_fct", coefs)
saveRDS(coefs, "./clean_data/projecoes-amparo.rds")
coefs <- readRDS("./clean_data/projecoes-amparo.rds")
data_ellipses <- coefs %>%
filter(abs(alfa)<20) %>%
select(alfa, beta, playid) %>%
desenha_ellipse(playid)
coefs %>% filter(abs(alfa)<5) %>%
ggplot(aes(x=alfa, y=beta, col=playid))+
geom_point()+
geom_path(data=data_ellipses,
aes(x=alfa, y=beta, col=playid),
inherit.aes = T)
ggsave("./plots/scatter-hab-grupo-amparo.pdf")
acerto <- data$acertou_lgl %>% as.numeric
alias <- data$playeralias %>% as.numeric
id <- data$playid %>% as.numeric
move <- data$move
p <- alias %>% max    #numero de pacientes.
f <- id %>% max       #numero de fases.
m <- p*f              #numero de combinacoes paciente x fase.
n <- alias %>% length #numero total de jogadas (linhas).
fator <- f*(alias-1)+id
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
library(broom)
library(dplyr)
library(ellipse)
library(ggplot2)
library(magrittr)
library(mcmc)
library(purrr)
library(purrrlyr)
library(rstan)
library(tibble)
data <- read.csv("../data.csv")
labels <- read.csv("../labels.csv")
acerto <- data$acertou_lgl %>% as.numeric
alias <- data$playeralias %>% as.numeric
id <- data$playid %>% as.numeric
f <- id %>% max       #numero de fases.
m <- p*f              #numero de combinacoes paciente x fase.
move <- data$move
n <- alias %>% length #numero total de jogadas (linhas).
p <- alias %>% max    #numero de pacientes.
fator <- f*(alias-1)+id
acerto <- data$acertou_lgl %>% as.numeric
alias <- data$playeralias %>% as.numeric
id <- data$playid %>% as.numeric
move <- data$move
p <- alias %>% max    #numero de pacientes.
f <- id %>% max       #numero de fases.
m <- p*f              #numero de combinacoes paciente x fase.
n <- alias %>% length #numero total de jogadas (linhas).
fator <- f*(alias-1)+id
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
saveRDS(amostra, "./clean_data/glm-amparo.rds")
amostra <- readRDS("./clean_data/glm-amparo.rds")
alfa <- amostra %>% extract("alfa")
beta <- amostra %>% extract("beta")
gamma <- amostra %>% extract("gamma")
alfa.m <- alfa$alfa %>% colMeans
beta.m <- beta$beta %>% colMeans
gamma.m <- gamma$gamma %>% colMeans
plot(alfa)
alfa %>% hist
alfa.m %>% hist
fatores <- 1:m
ids <- fatores %% f
aliass <- (fatores-1) %/% f +1
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx] %>% as.numeric
players_sort <- players %>% sort %>% match(players)
players_states <- data$HY_[player_idx]
players_states <- player_states[players_sort]
players_escol <- data$escolaridade[player_idx]
players_escol <- players_escol[players_sort]
hy_ <- players_states %>% rep(each=f) %>% as.factor
escol <- players_escol %>% rep(each=f) %>% as.factor
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx] %>% as.numeric
players_sort <- players %>% sort %>% match(players)
players_states <- data$HY_[player_idx]
players_states <- player_states[players_sort]
players_states <- players_states[players_sort]
players_escol <- data$escolaridade[player_idx]
players_escol <- players_escol[players_sort]
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx] %>% as.numeric
players_sort <- players %>% sort %>% match(players)
players_states <- data$HY_[player_idx]
players_states <- players_states[players_sort]
players_escol <- data$escolaridade[player_idx]
players_escol <- players_escol[players_sort]
hy_ <- players_states %>% rep(each=f) %>% as.factor
escol <- players_escol %>% rep(each=f) %>% as.factor
bloco <- data$playid %>% unique %>% sort %>% rep(p)
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco) %>%
mutate(iter1=paste(bloco,hy_),
iter2=paste(bloco,escol))
param %>% ggplot(aes(x=iter1, y=gamma.m, fill=iter1))+
geom_boxplot()
param %>% ggplot(aes(x=iter2, y=gamma.m, fill=iter2))+
geom_boxplot()
param %>% ggplot(aes(x=iter1, y=beta.m, fill=iter1))+
geom_boxplot()
param %>% ggplot(aes(x=iter2, y=beta.m, fill=iter2))+
geom_boxplot()
amostra <- stan(file="amparo-probito.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
amostra <- stan(file="amparo-probito.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
library(broom)
library(dplyr)
library(ellipse)
library(ggplot2)
library(magrittr)
library(mcmc)
library(purrr)
library(purrrlyr)
library(rstan)
library(tibble)
data <- read.csv("../data.csv")
labels <- read.csv("../labels.csv")
amostra <- stan(file="amparo-probito.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
saveRDS(amostra, "./clean_data/glm-amparo-probito.rds")
amostra <- readRDS("./clean_data/glm-amparo.rds")
alfa <- amostra %>% extract("alfa")
beta <- amostra %>% extract("beta")
gamma <- amostra %>% extract("gamma")
alfa.m <- alfa$alfa %>% colMeans
beta.m <- beta$beta %>% colMeans
gamma.m <- gamma$gamma %>% colMeans
fatores <- 1:m
ids <- fatores %% f
aliass <- (fatores-1) %/% f +1
player_idx <- data$playeralias %>% unique %>% match(data$playeralias)
players <- data$playeralias[player_idx] %>% as.numeric
players_sort <- players %>% sort %>% match(players)
players_states <- data$HY_[player_idx]
players_states <- players_states[players_sort]
players_escol <- data$escolaridade[player_idx]
players_escol <- players_escol[players_sort]
hy_ <- players_states %>% rep(each=f) %>% as.factor
escol <- players_escol %>% rep(each=f) %>% as.factor
bloco <- data$playid %>% unique %>% sort %>% rep(p)
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco) %>%
mutate(iter1=paste(bloco,hy_),
iter2=paste(bloco,escol))
hy_ <- players_states %>% rep(each=f) %>% as.factor
escol <- players_escol %>% rep(each=f) %>% as.factor
bloco <- data$playid %>% unique %>% sort %>% rep(p)
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco)
param %>% ggplot(aes(x=hy_, y=gamma.m, fill=bloco))+
geom_boxplot()
param %>% ggplot(aes(x=bloco, y=gamma.m, fill=hy_))+
geom_boxplot()
param %>% ggplot(aes(x=bloco, y=gamma.m, fill=hy_))+
geom_boxplot()
param %>% ggplot(aes(x=bloco, y=gamma.m, fill=escol))+
geom_boxplot()
?replace
escol <- players_escol %>% rep(each=f) %>% as.factor
escol
escol %>% replace(c("0","1","2"), c("a","b","c"))
escol %>% as.character %>% replace(c("0","1","2"), c("a","b","c"))
escol %>% match(escol %>% unique)
escol %>% unique
escol %>% match(escol %>% unique %>% sort)
escol
escol[escol=="0"]
escol[escol=="0"] <- "Fundamental"
escol[escol=="1"] <- "Médio"
escol[escol=="0"] <- "Fundamental"
escol[escol=="0"] <- "Fundamental"
hy_ <- players_states %>% rep(each=f) %>% as.factor
escol <- players_escol %>% rep(each=f) %>% as.character
escol[escol=="0"] <- "Fundamental"
escol[escol=="1"] <- "Médio"
escol[escol=="2"] <- "Superior"
bloco <- data$playid %>% unique %>% sort %>% rep(p)
param <- data.frame(beta.m=beta.m,
gamma.m=gamma.m,
hy_=hy_,
escol=escol,
bloco=bloco)
param %>% ggplot(aes(x=bloco, y=gamma.m, fill=hy_))+
geom_boxplot()
param %>% ggplot(aes(x=bloco, y=gamma.m, fill=hy_))+
geom_boxplot()
ggsave("./plots/logit-amparo-hy.pdf")
param %>% ggplot(aes(x=bloco, y=gamma.m, fill=escol))+
geom_boxplot()
ggsave("./plots/logit-amparo-escol.pdf")
ggsave("./plots/logit-amparo-escol.jpg")
?ggsave
library(dplyr)
library(magrittr)
library(tibble)
