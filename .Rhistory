library(broom)
library(dplyr)
library(ellipse)
library(ggplot2)
library(magrittr)
library(mcmc)
library(purrr)
library(purrrlyr)
library(rstan)
library(tibble)
#Carregar BD
data <- read.csv("../amparo.csv")
data %<>% mutate(id.alias=paste(playid,playeralias,sep=""))
n <- data2$alias %>% max #numero de pacientes.
t <- data2$id %>% max    #número de tratamentos.
m <- data2 %>% nrow      #numero total de jogadas (linhas).
acerto <- data2$correct %>% as.character %>%
tolower == "true" %>% as.numeric
alias <- data2$alias
id <- data2$id
move <- data2$move
data2 <- data %>% mutate(alias=playeralias %>% as.numeric,
id=playid %>% as.numeric) %>%
select(alias, correct, id, move)
n <- data2$alias %>% max #numero de pacientes.
t <- data2$id %>% max    #número de tratamentos.
m <- data2 %>% nrow      #numero total de jogadas (linhas).
acerto <- data2$correct %>% as.character %>%
tolower == "true" %>% as.numeric
alias <- data2$alias
id <- data2$id
move <- data2$move
amostra <- stan(file="amparo.stan",
data=c("n", "t", "m", "acerto",
"alias", "id", "move"),
iter=10, chains=1)
acerto
acerto <- data2$correct %>% as.character %>%
tolower == "true" %>% as.numeric
acerto
data2$correct
acerto <- data2$correct %>% as.character %>%
tolower == "true" %>% as.numeric
acerto <- data2$correct %>%
as.character %>% tolower == "true" %>% as.numeric
acerto <- data2$correct %>% as.character %>% tolower
acerto <= (acerto == "true") %>% as.numeric
acerto
acerto <- data2$correct %>% as.character %>% tolower
acerto
(acerto == "true") %>% as.numeric
acerto <- (acerto == "true") %>% as.numeric
acerto
amostra <- stan(file="amparo.stan",
data=c("n", "t", "m", "acerto",
"alias", "id", "move"),
iter=10, chains=1)
plot(amostra)
amostra <- stan(file="amparo.stan",
data=c("n", "t", "m", "acerto",
"alias", "id", "move"),
iter=100, chains=1)
library(broom)
library(dplyr)
library(ellipse)
library(ggplot2)
library(magrittr)
library(mcmc)
library(purrr)
library(purrrlyr)
library(rstan)
library(tibble)
data <- read.csv("../amparo.csv")
data$game
data$game == JG
data$game == "JG"
data %<>% filter(game=="JG") %>%
mutate(id.alias=paste(playid,playeralias,sep=""))
dim(data)
data$game
data$game %>% unique
coefs <- data %>% do(tidy(glm(correct~move,
data=.,
family=binomial(link="logit")))) %>%
group_by(id.alias) %>%
select(term, estimate)
data <- read.csv("../amparo.csv")
data %<>% filter(game=="JG") %>%
mutate(id.alias=paste(playid,playeralias,sep=""))
coefs <- data %>% do(tidy(glm(correct~move,
data=.,
family=binomial(link="logit")))) %>%
group_by(id.alias) %>%
select(term, estimate)
data$id.alias
coefs <- data %>% do(tidy(glm(correct~move,
data=.,
family=binomial(link="logit")))) %>%
group_by(id.alias) %>%
select(term, estimate)
coefs <- data %>% group_by(id.alias) %>%
do(tidy(glm(correct~move,
data=.,
family=binomial(link="logit")))) %>%
group_by(id.alias) %>%
select(term, estimate)
coefs <- split(coefs, coefs$term)
coefs$"(Intercept)" %<>% select(id.alias, estimate)
colnames(coefs$"(Intercept)") <- c("id.alias", "alfa")
coefs$"move" <- coefs$"move"
coefs$"move" %<>% select(id.alias, estimate)
colnames(coefs$"move") <- c("id.alias", "beta")
coefs <- merge(coefs$"(Intercept)", coefs$"move", by="id.alias")
coefs <- merge(data %>% select(id.alias,playid) %>% unique, by="id.alias", coefs)
coefs <- readRDS("./clean_data/projecoes-amparo.rds")
desenha_ellipse <- function(df, ...){
ok_stages <- coefs %>% group_by(playid) %>%
summarise(n=n()) %>%
filter(n>5) %>%
select(playid) %>%
unlist
df %>% filter(playid %in% ok_stages) %>%
group_by(...) %>%
by_slice(function(df){ ellipse(x = cov(df)/nrow(df),
centre=colMeans(df),
level = 0.95,
npoints = 100) %>%
as.data.frame()},
.collate = 'rows')
}
data_ellipses <- coefs %>%
filter(abs(alfa)<20) %>%
select(alfa, beta, playid) %>%
desenha_ellipse(playid)
coefs %>% filter(abs(alfa)<5) %>%
ggplot(aes(x=alfa, y=beta, col=playid))+
geom_point()+
geom_path(data=data_ellipses,
aes(x=alfa, y=beta, col=playid),
inherit.aes = T)
ggsave("./plots/scatter-hab-grupo-amparo.pdf")
data2 <- data %>% mutate(alias=playeralias %>% as.numeric,
id=playid %>% as.numeric) %>%
select(alias, correct, id, move)
data2$correct
data2 <- data %>% mutate(acerto=(correct=="TRUE") %>% as.numeric,
alias=playeralias %>% as.numeric,
id=playid %>% as.numeric) %>%
select(acerto, alias, id, move)
acerto <- data2$acerto
acerto
alias <- data2$alias
id <- data2$id
move <- data2$move
id
alias
move
id
unique(id)
max(id)
alias
unique(alias)
table(alias)
table(alias)
plot(table(alias))
table(alias) != 120
which(table(alias) != 120)
table(alias)[which(table(alias) != 120)]
id
max(id)
nivel <- (alias-1)*t + id
alias
alias-1
(alias-1)*t
t
library(broom)
library(dplyr)
library(ellipse)
library(ggplot2)
library(magrittr)
library(purrr)
library(purrrlyr)
library(tibble)
data <- readRDS("./clean_data/data.rds")
data %>% group_by(id) %>%
summarise(stage=unique(stage), max_jog=max(tempo)) %>%
ggplot(aes(x=max_jog, col=stage))+geom_histogram(bins=10)
data <- read.csv("../amparo.csv")
data %<>% filter(game=="JG") %>%
mutate(id.alias=paste(playid,playeralias,sep=""))
library(broom)
library(dplyr)
library(ellipse)
library(ggplot2)
library(magrittr)
library(mcmc)
library(purrr)
library(purrrlyr)
library(rstan)
library(tibble)
dim(data)
data2 <- data %>% mutate(acerto=(correct=="TRUE") %>% as.numeric,
alias=playeralias %>% as.numeric,
id=playid %>% as.numeric) %>%
select(acerto, alias, id, move)
n <- data2$alias %>% max #numero de pacientes.
t <- data2$id %>% max    #número de tratamentos.
m <- data2 %>% nrow      #numero total de jogadas (linhas).
acerto <- data2$acerto
alias <- data2$alias
id <- data2$id
move <- data2$move
nivel <- t*(alias-1)
nivel <- t*(alias-1)+id
nivel
alias
nivel <- t*(alias-1)+id
nivel
table(nivel)
t*m
n*t
p <- data2$alias %>% max #numero de pacientes.
f <- data2$id %>% max    #numero de fases.
m <- p*f                 #numero de combinacoes paciente x fase.
n <- data2 %>% nrow      #numero total de jogadas (linhas).
acerto <- data2$acerto
alias <- data2$alias
id <- data2$id
nivel <- t*(alias-1)+id
fator <- t*(alias-1)+id
m <- p*f                 #numero de combinacoes paciente x fase.
n <- data2 %>% nrow      #numero total de jogadas (linhas).
acerto <- data2$acerto
alias <- data2$alias
id <- data2$id
fator <- t*(alias-1)+id
move <- data2$move
length(move)
m
n
p <- data2$alias %>% max #numero de pacientes.
f <- data2$id %>% max    #numero de fases.
m <- p*f                 #numero de combinacoes paciente x fase.
n <- data2 %>% nrow      #numero total de jogadas (linhas).
acerto <- data2$acerto
alias <- data2$alias
id <- data2$id
fator <- t*(alias-1)+id
move <- data2$move
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=10, chains=1)
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=10, chains=1)
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=100, chains=1)
329/60
329/60 * 10
amostra <- stan(file="amparo.stan",
data=c("m","n", "acerto", "fator", "move"),
iter=1000, chains=1)
amostra
plot(amostra)
extra(amostra,alfa)
extra(amostra,"alfa")
extract(amostra,"alfa")
betas <- extract(amostra,"beta")
betas <- extract(amostra,"gamma")
alfa <- extract(amostra,"alfa")
beta <- extract(amostra,"beta")
gamma <- extract(amostra,"gamma")
dim(alfa)
alfa
attributes(alfa)
class(alfa)
alfa$alfa
class(alfa$alfa)
alfa$alfa %>% dim
alfa$alfa %>% colmeans
alfa$alfa %>% colmean
alfa$alfa %>% colMean
alfa$alfa %>% colMeans
alfa$alfa %>% colMeans %>% dim
alfa$alfa %>% colMeans %>% length
alfa.m <- alfa$alfa %>% colMeans
beta.m <- beta$beta %>% colMeans
gamma.m <- gamma$gamma %>% colMeans
plot(gamma.m)
cbind(beta.m,gamma.m)
cbind(beta.m,gamma.m) %>% plot
beta.m <- amostra %>% extract("beta")
beta.m
beta.m %>% unlist
beta.m %>% unlist %>% class
?extract
theta.m <- amostra %>% extract %>% lapply(function(x) colMeans(x))
?lapply
amostra %>% extract
class(amostra %>% extract)
(amostra %>% extract)$alfa
(amostra %>% extract)$alfa %>% colMeans
theta.m <- amostra %>% extract %>% lapply(function(x) colMeans(x))
beta <- amostra %>% extract("beta")
gamma <- amostra %>% extract("gamma")
beta.m <- beta$beta %>% colMeans
gamma.m <- gamma$gamma %>% colMeans
cbind(beta.m,gamma.m) %>% plot
col <- nivel %% 4
col
?plot
nivel
?col
?plot
cols <- nivel %% 4
cbind(beta.m,gamma.m) %>% plot(col=cols)
saveRDS("./clean_data/glm-amparo.rds")
saveRDS(amostra, "./clean_data/glm-amparo.rds")
amostra <- readRDS("./clean_data/glm-amparo.rds")
beta <- amostra %>% extract("beta")
gamma <- amostra %>% extract("gamma")
beta.m <- beta$beta %>% colMeans
gamma.m <- gamma$gamma %>% colMeans
cols <- nivel %% 4
cbind(beta.m,gamma.m) %>% plot(col=cols)
